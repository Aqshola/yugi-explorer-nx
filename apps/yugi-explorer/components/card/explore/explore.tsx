import NextImage from 'next/image';
import { useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import Link from 'next/link';

/* eslint-disable-next-line */

export interface ExploreProps {
  imageSrc: string;
  id: string;
  callbackDeck?: (props: any) => void;
}

export function Explore(props: ExploreProps) {
  const [deck, setdeck] = useState(false);
  function getDeck() {
    const data = localStorage.getItem('deck');
    return JSON.parse(data);
  }

  function addDeck() {
    const data = getDeck() || [];
    const check = data.filter((item: any) => item.id === props.id);
    if (check.length === 0) {
      data.push({
        id: props.id,
        imageSrc: props.imageSrc,
      });
      setdeck(true);
    } else {
      data.splice(data.map((item) => item.id).indexOf(props.id), 1);
      setdeck(false);
    }
    localStorage.setItem('deck', JSON.stringify(data));
    if (props.callbackDeck) {
      props.callbackDeck(props.id);
    }
  }

  useEffect(() => {
    const data = getDeck() || [];
    const check = data.filter((item: any) => item.id === props.id);
    if (check.length > 0) {
      setdeck(true);
    } else {
      setdeck(false);
    }
  }, []);

  return (
    <motion.div
      layout
      className={'relative block w-full h-fit flip-box yugi-card'}
      layoutId={`picture${props.id}`}
      exit={{ scale: 0, opacity: 0 }}
      transition={{
        duration: 0.5,
      }}
      animate={{ scale: 1 }}
      data-deck={deck}
    >
      <div className="absolute left-0 w-full h-full flex justify-start pl-24 pb-24">
        <motion.button
          data-testid='add-deck'
          onClick={addDeck}
          className={'action-deck z-20' + (deck ? ' btn-deck ' : '')}
        >
          {deck ? (
            <svg
              width="30"
              height="34"
              viewBox="0 0 30 34"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M29.46 8.56998C29.4631 8.04216 29.3318 7.52224 29.0785 7.05917C28.8252 6.5961 28.4582 6.20512 28.0121 5.92304C27.566 5.64096 27.0554 5.47706 26.5284 5.44679C26.0015 5.41651 25.4755 5.52085 25 5.74998C24.9686 5.21844 24.8046 4.70322 24.523 4.2513C24.2415 3.79937 23.8512 3.42512 23.388 3.16266C22.9247 2.9002 22.4031 2.75788 21.8707 2.74867C21.3383 2.73947 20.8121 2.86368 20.34 3.10998C20.2868 2.3456 19.9684 1.62378 19.4398 1.06905C18.9112 0.514322 18.2056 0.161481 17.4447 0.0714033C16.6838 -0.0186739 15.9153 0.159662 15.2718 0.575644C14.6283 0.991625 14.1502 1.61916 13.92 2.34998C13.4185 2.0492 12.8448 1.89022 12.26 1.88998C11.8297 1.89129 11.4039 1.9775 11.0071 2.14367C10.6102 2.30984 10.25 2.5527 9.94713 2.85834C9.64428 3.16398 9.40473 3.52638 9.2422 3.92477C9.07967 4.32316 8.99736 4.74972 9 5.17998V17.84C7.72 16.24 6.47 14.66 6.28 14.39C5.9908 13.9308 5.58922 13.5529 5.11326 13.2922C4.63729 13.0315 4.10268 12.8965 3.56 12.9C3.09969 12.8861 2.64141 12.9666 2.21345 13.1367C1.7855 13.3068 1.39694 13.5628 1.07177 13.8889C0.746607 14.215 0.491727 14.6043 0.322868 15.0328C0.154009 15.4612 0.0747544 15.9197 0.0899965 16.38C0.179997 18.18 3.66 24.54 6 28C9.54 33.24 12.92 34 13.07 34H23.59C23.7891 33.9978 23.982 33.9311 24.14 33.81C25.9357 32.1551 27.2344 30.0323 27.89 27.68C28.89 24.59 29.42 20.15 29.47 14.12L29.46 8.56998ZM26.18 27.12C25.6185 29.0233 24.6105 30.7649 23.24 32.2H13.33C12.86 32.06 10.26 31.1 7.46 26.95C4.66 22.8 1.94 17.27 1.89 16.29C1.88194 16.0806 1.91782 15.8719 1.99532 15.6773C2.07283 15.4827 2.19024 15.3065 2.34 15.16C2.48751 15.0081 2.66511 14.8888 2.86142 14.8096C3.05773 14.7304 3.26842 14.693 3.48 14.7C3.74417 14.6846 4.00742 14.7428 4.24047 14.8682C4.47352 14.9935 4.66721 15.1811 4.8 15.41C5.09 15.84 7.16 18.41 8.37 19.94L10.8 18.3V5.17998C10.7832 4.97607 10.8088 4.77089 10.8753 4.5774C10.9418 4.3839 11.0477 4.2063 11.1864 4.0558C11.325 3.9053 11.4933 3.78518 11.6806 3.70301C11.868 3.62085 12.0704 3.57843 12.275 3.57843C12.4796 3.57843 12.682 3.62085 12.8694 3.70301C13.0567 3.78518 13.225 3.9053 13.3636 4.0558C13.5022 4.2063 13.6081 4.3839 13.6746 4.5774C13.7411 4.77089 13.7668 4.97607 13.75 5.17998V16.32H15.55V3.31998C15.5926 2.952 15.7689 2.6125 16.0455 2.36607C16.3221 2.11964 16.6796 1.98347 17.05 1.98347C17.4204 1.98347 17.7779 2.11964 18.0545 2.36607C18.3311 2.6125 18.5074 2.952 18.55 3.31998V16.45H20.35V5.99998C20.3335 5.80281 20.358 5.60436 20.4221 5.41717C20.4862 5.22998 20.5885 5.05814 20.7224 4.9125C20.8564 4.76686 21.0191 4.65061 21.2003 4.57108C21.3814 4.49156 21.5771 4.4505 21.775 4.4505C21.9729 4.4505 22.1686 4.49156 22.3497 4.57108C22.5309 4.65061 22.6936 4.76686 22.8276 4.9125C22.9615 5.05814 23.0637 5.22998 23.1279 5.41717C23.192 5.60436 23.2165 5.80281 23.2 5.99998V17.44H25V8.53998C25.0288 8.20844 25.1809 7.89975 25.4262 7.67485C25.6715 7.44996 25.9922 7.32519 26.325 7.32519C26.6578 7.32519 26.9785 7.44996 27.2238 7.67485C27.4691 7.89975 27.6212 8.20844 27.65 8.53998V14.09C27.62 20 27.14 24.21 26.18 27.12V27.12Z"
                fill="black"
              />
            </svg>
          ) : (
            <svg
              width="70"
              height="70"
              viewBox="0 0 36 36"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clipPath="url(#clip0_3_6)">
                <path
                  d="M28.09 9.73998C27.6961 9.74584 27.3052 9.80987 26.93 9.92998C26.74 8.68998 25.38 7.74998 23.66 7.74998C23.1386 7.73274 22.6188 7.81767 22.13 7.99998C21.8191 7.45255 21.3612 7.00314 20.808 6.70267C20.2547 6.40221 19.6284 6.26271 19 6.29998C18.4511 6.27555 17.9042 6.3826 17.405 6.61219C16.9058 6.84179 16.4687 7.18731 16.13 7.61998C15.5582 7.28106 14.9047 7.10471 14.24 7.10998C13.4436 7.05728 12.6583 7.31886 12.0525 7.8386C11.4468 8.35834 11.0689 9.09481 11 9.88998V10.8C9.94 11.2 6.89 12.6 6.09 15.64C5.29 18.68 6.43 23.64 8.78 27.42C10.3598 29.8828 12.3563 32.0519 14.68 33.83C14.8343 33.9412 15.0198 34.0007 15.21 34H25.55C25.7491 33.9978 25.9421 33.9312 26.1 33.81C27.8957 32.1551 29.1944 30.0323 29.85 27.68C30.984 24.5827 31.5135 21.2967 31.41 18V12.5C31.3289 11.6966 30.9355 10.9571 30.3145 10.4409C29.6936 9.92468 28.8947 9.67297 28.09 9.73998V9.73998ZM29.61 18C29.7191 21.1165 29.2198 24.2244 28.14 27.15C27.5742 29.0426 26.5665 30.7735 25.2 32.2H15.47C13.4359 30.5901 11.6793 28.6578 10.27 26.48C7.9 22.62 7.27 18.25 7.79 16.09C8.06264 15.3414 8.48916 14.6583 9.04206 14.0848C9.59496 13.5112 10.2619 13.0599 11 12.76V20.41C11 20.6487 11.0948 20.8776 11.2636 21.0464C11.4324 21.2152 11.6613 21.31 11.9 21.31C12.1387 21.31 12.3676 21.2152 12.5364 21.0464C12.7052 20.8776 12.8 20.6487 12.8 20.41V9.88998C12.8 9.41998 13.39 8.88998 14.26 8.88998C15.13 8.88998 15.75 9.40998 15.75 9.88998V15.61H17.55V8.80998C17.55 8.52998 18.13 8.09998 19.01 8.09998C19.89 8.09998 20.54 8.57998 20.54 8.84998V15.74H22.34V9.99998L22.51 9.87998C22.8629 9.65864 23.2736 9.54725 23.69 9.55998C24.62 9.55998 25.19 9.99998 25.19 10.24V16.74H27V11.87C27.3297 11.6458 27.7214 11.5304 28.12 11.54C28.98 11.54 29.64 12.05 29.64 12.48L29.61 18Z"
                  fill="black"
                />
              </g>
              <defs>
                <clipPath id="clip0_3_6">
                  <rect width="36" height="36" fill="white" />
                </clipPath>
              </defs>
            </svg>
          )}
        </motion.button>
      </div>
      <Link key={props.id} href={`/${props.id}`} passHref>
        <a className="block w-full relative flip-box-inner" aria-label={"detail "+props.id}>
          <div className={"flip-transition block relative "+(deck?'flipped':'')}>
            <NextImage
              aria-label={props.id}
              data-testid='img-card'
              src={props.imageSrc}
              height={456}
              width={313}
              layout="responsive"
              objectFit="cover"
              placeholder="blur"
              blurDataURL="/image/CardBack.jpg"
            />
          </div>
          <div className={"flip-transition delay-700 absolute  top-0 h-[200px] w-full "+(!deck?'flipped':'')}>
            <NextImage
            aria-label={"Back Cover"}
              objectFit="cover"
              src={'/image/CardBack.jpg'}
              height={456}
              width={313}
              layout="responsive"
              placeholder="blur"
              blurDataURL="/image/CardBack.jpg"
            />
          </div>
        </a>
      </Link>
    </motion.div>
  );
}

export default Explore;
